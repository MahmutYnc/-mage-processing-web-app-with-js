<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" />

<div class="widget">
    <div class="widget-search">
        <form action="/kitapara" method="GET">
            <input class="search-input form-control" type="text" name="search" placeholder="Search">
            <button type="submit" class="m-2 btn btn-danger search-btn">Search</button>
        </form>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h3>Kitaplar</h3>
            <div class="list-group">
                {{#each books}}
                <a class="list-group-item clearfix" id="{{isbnNumber}}" onclick="saveBook(this)">
                    {{bookName}}
                    <span class="pull-right">
                        <span class="btn btn-xs btn-default" onclick="">
                            <span class="glyphicon glyphicon-book" aria-hidden="true"></span>
                        </span>
                    </span>
                </a>
                {{else}}
                <div class="alert alert-info">
                    Bu isimde bir kitap bulunmamaktadır.
                </div>
                {{/each}}
            </div>

            <div class="m-2">
                <button type="submit" onclick="submitBooks()" class="btn btn-danger">kaydet</button>
            </div>
            <span></span>
            <div>
            </div>
            <div id="chosenBooks">
                Seçtiğin Kitaplar:
            </div>
        </div>

    </div>
</div>



<script>

    kitapZaman = () => {
        return new Promise((resolve, reject) => {
            var xmlhttp = new XMLHttpRequest();   // new HttpRequest instance 
            xmlhttp.open("GET", "/kitapzaman");
            xmlhttp.setRequestHeader("Content-Type", "application/json");
            xmlhttp.onreadystatechange = function () {
                if (this.readyState == 4) {
                    resolve(this.responseText)

                }
            };
            xmlhttp.send();
        })

    }

    let bookList = [];
    let concList = '';
    saveBook = (e) => {
        kitapZaman().then(res => {
            if (res == "true") {
                alert("Geri Vermediginiz Kitap Var. Kitap Ekleyemezsiniz")
            } else {
                var xmlhttp = new XMLHttpRequest();   // new HttpRequest instance 
                xmlhttp.open("POST", "/kitapvarmi");
                xmlhttp.setRequestHeader("Content-Type", "application/json");
                xmlhttp.onreadystatechange = function () {
                    if (this.readyState == 4) {
                        if (this.responseText == "false") {
                            if (bookList.length < 3) {
                                concList = '';
                                bookList = [...bookList, { bookName: e.innerText, isbnNumber: e.id }]
                                bookList.forEach(book => {
                                    concList += `${book.bookName} `
                                })
                                document.querySelector("#chosenBooks").innerHTML = `Seçtiğin Kitaplar: ${concList}`
                            } else {
                                alert("3 ten fazla kitap secemezsiniz")
                            }
                            console.log(bookList)
                        } else {
                            alert("KITAP BASKASINDA EKLI");
                        }
                    }
                };
                xmlhttp.send(JSON.stringify({ id: e.id }));
            }
        })
    }

    submitBooks = (e) => {

        var xmlhttp = new XMLHttpRequest();   // new HttpRequest instance 
        xmlhttp.open("POST", "/kitapara");
        xmlhttp.setRequestHeader("Content-Type", "application/json");
        xmlhttp.send(JSON.stringify(bookList));

    }


</script>